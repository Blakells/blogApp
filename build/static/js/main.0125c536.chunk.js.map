{"version":3,"sources":["services/login.js","services/blogs.js","reducers/loginReducer.js","components/Navigation.js","hooks/index.js","reducers/blogReducer.js","reducers/notificationReducer.js","components/Blog.js","components/BlogRow.js","components/BlogList.js","components/BlogForm.js","components/Notification.js","components/Togglable.js","services/users.js","reducers/userReducer.js","components/UserPage.js","components/User.js","App.js","store.js","index.js"],"names":["login","creds","a","axios","post","res","data","token","getAll","get","create","newObject","config","headers","Authorization","update","put","id","then","setToken","newToken","remove","blog","delete","deletedBlog","getOne","addComment","comment","reducer","state","action","type","blogService","mapDispatchToProps","logout","dispatch","window","localStorage","removeItem","withRouter","connect","loggedUser","props","goto","path","history","push","Menu","Item","onClick","position","name","useField","useState","value","setValue","input","onChange","event","target","reset","concat","map","b","blogToUpdate","find","n","changedBlog","upvotes","Number","s","comments","filter","initialState","message","style","setNotification","timeout","setTimeout","updateBlog","deleteBlog","title","Header","as","author","Button","compact","icon","url","user","Icon","Divider","Input","primary","List","key","Content","BlogRow","to","blogs","selection","verticalAlign","size","addBlog","newBlog","Form","onSubmit","preventDefault","Field","required","notification","trim","Message","negative","positive","Togglable","React","forwardRef","ref","visible","setVisible","hideWhenVisible","display","showWhenVisible","toggleVisibility","useImperativeHandle","buttonLabel","children","createUser","newObj","initializeUsers","userService","users","UserPage","useDispatch","useSelector","useEffect","length","User","fetchUser","userStr","getItem","JSON","parse","loginService","username","password","setItem","stringify","initializeBlogs","addUser","newUser","sort","b1","b2","fetchBlogs","fetchUsers","signupUsername","signupPassword","handleLogin","handleSignup","Container","Segment","exact","render","match","params","combineReducers","loginReducer","blogReducer","userReducer","notificationReducer","store","createStore","applyMiddleware","thunk","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.0125c536.chunk.js","sourcesContent":["import axios from 'axios'\r\nconst baseUrl = '/api/login'\r\n\r\nconst login = async creds => {\r\n    const res = await axios.post(baseUrl, creds)\r\n    return res.data\r\n}\r\n\r\nexport default {login}","import axios from 'axios'\r\nconst baseUrl = '/api/blogs'\r\n\r\nlet token = ''\r\n\r\nconst setToken = newToken => {\r\n    token = `bearer ${newToken}`\r\n}\r\n\r\nconst getAll = async () => {\r\n    const res = await axios.get(baseUrl)\r\n    return res.data\r\n}\r\n\r\nconst create = async newObject => {\r\n    const config = {\r\n        headers: {Authorization: token}\r\n    }\r\n    const res = await axios.post(baseUrl, newObject, config)\r\n    return res.data\r\n}\r\n\r\nconst update = (newObject) => {\r\n    const req = axios.put(`${baseUrl}/${newObject.id}`, newObject)\r\n    return req.then(res => res.data)\r\n}\r\n\r\nconst remove = async (blog) => {\r\n    const config = {\r\n        headers: {Authorization: token}\r\n    }\r\n    const deletedBlog = await axios.delete(`${baseUrl}/${blog.id}`, config)\r\n    return deletedBlog.data\r\n  }\r\n\r\nconst getOne = async (blog) => {\r\n    const res = await axios.get(`${baseUrl}/${blog.id}`, blog)\r\n    return res.data\r\n}\r\n\r\nconst addComment = async (id, comment) => {\r\n    const res = await axios.post(`${baseUrl}/${id}/comments`, {comment})\r\n    return res.data\r\n}\r\n\r\nexport default { getAll, create, update, setToken, remove, getOne, addComment}","import loginService from '../services/login'\r\nimport blogService from '../services/blogs'\r\n\r\nconst reducer = (state = null, action) => {\r\n  switch (action.type) {\r\n  case 'SET_USER':\r\n    if (action.data) blogService.setToken(action.data.token)\r\n    return action.data\r\n  default: return state\r\n  }\r\n}\r\n\r\nexport const fetchUser = () => {\r\n  return dispatch => {\r\n    const userStr = window.localStorage.getItem('loggedBlogAppUser')\r\n    const user = JSON.parse(userStr)\r\n    if (user) {\r\n      dispatch({ type: 'SET_USER', data: user })\r\n    }\r\n  }\r\n}\r\n\r\nexport const setUser = (data) => {\r\n  return dispatch => {\r\n    dispatch({ type: 'SET_USER', data })\r\n  }\r\n}\r\n \r\nexport const login = (data) => {\r\n  return async dispatch => {\r\n    const user = await loginService.login({\r\n      username: data.username,\r\n      password: data.password\r\n    })\r\n    window.localStorage.setItem('loggedBlogAppUser', JSON.stringify(user))\r\n    dispatch({ type: 'SET_USER', data: user })\r\n  }\r\n}\r\n\r\nexport const logout = () => {\r\n  return dispatch => {\r\n    window.localStorage.removeItem('loggedBlogAppUser')\r\n    dispatch({ type: 'SET_USER', data: null })\r\n  }\r\n}\r\n\r\nexport default reducer","import React from 'react'\r\nimport {withRouter, Redirect} from 'react-router-dom'\r\nimport { Menu } from 'semantic-ui-react'\r\nimport {logout} from '../reducers/loginReducer'\r\nimport PropTypes from 'prop-types'\r\nimport {connect} from 'react-redux'\r\n\r\n\r\nconst Navigation = (props) => {\r\n    const handleLogout = () => {\r\n      props.logout()\r\n      props.history.push('/')\r\n    }\r\n\r\n    const goto = (path) => props.history.push(path)\r\n\r\n    return (\r\n        <Menu>\r\n      <Menu.Item onClick={() => goto('/')}>blogs</Menu.Item>\r\n      <Menu.Item onClick={() => goto('/users')}>users</Menu.Item>\r\n      <Menu.Item position='right'>\r\n        {props.loggedUser.name} logged in\r\n      </Menu.Item>\r\n      <Menu.Item position='right' onClick={handleLogout}>log out</Menu.Item>\r\n    </Menu>\r\n    )\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n      loggedUser: state.loggedUser\r\n    }\r\n  }\r\n  \r\n  const mapDispatchToProps = { logout }\r\n  \r\n  Navigation.propTypes = {\r\n    loggedUser: PropTypes.object,\r\n    logout: PropTypes.func.isRequired,\r\n    history: PropTypes.shape({ push: PropTypes.func.isRequired }).isRequired\r\n  }\r\n  \r\n  export default withRouter(connect(mapStateToProps, mapDispatchToProps)(Navigation))","import { useState } from 'react'\r\n\r\nconst useField = (type) => {\r\n  const [value, setValue] = useState('')\r\n  const onChange = (event) => setValue(event.target.value)\r\n  const reset = () => setValue('')\r\n  return {\r\n    input: { type, value, onChange },\r\n    reset\r\n  }\r\n}\r\n\r\nexport default useField","import blogService from '../services/blogs'\r\n\r\n\r\nexport const addBlog = (blog) => {\r\n    return async dispatch => {\r\n        const newBlog = await blogService.create(blog)\r\n        dispatch({\r\n            type:'ADD_BLOG',\r\n            data: newBlog\r\n        })\r\n    }\r\n\r\n}\r\n\r\nexport const updateBlog = (blog) => {\r\n    return async dispatch => {\r\n        const data = await blogService.update(blog)\r\n        dispatch({\r\n            type: 'UPDATE_BLOG',\r\n            data\r\n        })\r\n    }\r\n}\r\n\r\nexport const initializeBlogs = () => {\r\n    return async dispatch => {\r\n        const blogs = await blogService.getAll()\r\n        dispatch({\r\n            type:'INIT_BLOGS',\r\n            data: blogs\r\n        })\r\n    }\r\n}\r\n\r\nexport const addBlogVote = (blog) => {\r\n    return async dispatch => {\r\n        const oldBlog = await blogService.getOne(blog)\r\n        const updatedBlog = {\r\n            ...oldBlog,\r\n            upvotes: Number(oldBlog.upvotes) + 1\r\n        }\r\n        console.log(updatedBlog)\r\n        await blogService.update(updatedBlog)\r\n        dispatch({\r\n            type: 'VOTE',\r\n            data: updatedBlog\r\n        })\r\n    }\r\n}\r\n\r\nexport const showAllBlogs = () => {\r\n    return async dispatch => {\r\n        const blogs = await blogService.getAll()\r\n        dispatch({\r\n            type: 'SHOW',\r\n            data: blogs\r\n        })\r\n    }\r\n}\r\n\r\nexport const deleteBlog = (blog) => {\r\n    return async dispatch => {\r\n        await blogService.remove(blog)\r\n        dispatch({\r\n            type:'DELETE',\r\n            data: blog\r\n        })\r\n    }\r\n}\r\n\r\nexport const addComment = (blog) => {\r\n    return async dispatch => {\r\n        const comment = await blogService.addComment(blog.id, blog.comment)\r\n        dispatch({\r\n            type: 'ADD_COMMENT',\r\n            data : {\r\n                id: blog.id,\r\n                comment: comment\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\n\r\nconst reducer = (state = [], action) => {\r\n   // console.log('state:', state)\r\n   // console.log('action:', action)\r\n    switch(action.type) {\r\n        case 'ADD_BLOG':\r\n            return state.concat(action.data)\r\n        case 'INIT_BLOGS':\r\n            return action.data\r\n        case 'UPDATE_BLOG':\r\n            return state.map(b => \r\n                b.id === action.data.id ? action.data : b)\r\n        case 'VOTE':\r\n            const id = action.data.id\r\n            const blogToUpdate = state.find(n => n.id === id)\r\n            const changedBlog = {\r\n                ...blogToUpdate,\r\n                upvotes: Number(blogToUpdate.upvotes) + 1\r\n            }\r\n            return state.map( s => s.id !== id ? s : changedBlog)\r\n        case 'ADD_COMMENT':\r\n            return state.map(b =>\r\n                b.id === action.data.id ? {\r\n                  ...b,\r\n                  comments: b.comments.concat(action.data.comment)\r\n                } : b\r\n              )\r\n        case 'SHOW':\r\n            return action.data\r\n        case 'DELETE':\r\n            return state.filter(s => s.id !== action.data.id)\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default reducer","const initialState = { message: '', style: '' }\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n  case 'SET_NOTIFICATION':\r\n    return {\r\n      message: action.data.message,\r\n      style: action.data.style\r\n    }\r\n  default: return state\r\n  }\r\n}\r\n\r\nexport const setNotification = (data, timeout) => {\r\n  return async dispatch => {\r\n    dispatch({ type: 'SET_NOTIFICATION', data })\r\n    setTimeout(() => dispatch({\r\n      type: 'SET_NOTIFICATION',\r\n      data: initialState\r\n    }), timeout)\r\n  }\r\n}\r\n\r\nexport default reducer","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\nimport { Button, Divider, Header, Input, Icon, List } from 'semantic-ui-react'\r\nimport useField from '../hooks/index'\r\nimport { updateBlog, deleteBlog, addComment } from '../reducers/blogReducer'\r\nimport { setNotification } from '../reducers/notificationReducer'\r\n\r\nconst Blog = (props) => {\r\n  const comment = useField('text')\r\n\r\n  const blog = props.blog\r\n  if (!blog) return null\r\n\r\n  const update = async (blog) => {\r\n    try {\r\n      await props.updateBlog(blog)\r\n      props.setNotification({\r\n        message: `blog \"${blog.title}\" updated`,\r\n        style: null\r\n      }, 2000)\r\n    } catch (exception) {\r\n      props.setNotification({\r\n        message: 'failed to update the blog',\r\n        style: 'error'\r\n      }, 2000)\r\n    }\r\n  }\r\n\r\n  const like = () =>\r\n    update({\r\n      id: blog.id,\r\n      title: blog.title,\r\n      author: blog.author,\r\n      url: blog.url,\r\n      upvotes: Number(blog.upvotes) + 1,\r\n      user: blog.user ? blog.user.id : null\r\n    })\r\n\r\n  const addComment = async () => {\r\n    try {\r\n      await props.addComment({\r\n        id: blog.id,\r\n        comment: comment.input.value\r\n      })\r\n      comment.reset()\r\n      props.setNotification({\r\n        message: 'new comment added',\r\n        style: null\r\n      }, 2000)\r\n    } catch (exception) {\r\n      props.setNotification({\r\n        message: 'failed to add a new comment',\r\n        style: 'error'\r\n      }, 2000)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Header as='h2'>{blog.title} {blog.author}</Header>\r\n      <p>\r\n        blog has {blog.upvotes} like(s) <Button id='like-button' compact icon onClick={like}>\r\n          <Icon name='like' />\r\n          like\r\n        </Button>\r\n      </p>\r\n      <p>added by {blog.user ? blog.user.name : '?'}</p>\r\n      <Divider />\r\n      <Header as='h3'>comments</Header>\r\n      <Input id='new-comment' {...comment.input} action={\r\n        <Button id='save-comment' primary onClick={addComment}>add comment</Button>\r\n      } />\r\n      <List>\r\n        {\r\n          blog.comments.map(comment =>\r\n            <List.Item key={comment.id}>\r\n              <List.Icon name='comment outline' />\r\n              <List.Content>{comment.comment}</List.Content>\r\n            </List.Item>\r\n          )\r\n        }\r\n      </List>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  updateBlog,\r\n  deleteBlog,\r\n  addComment,\r\n  setNotification\r\n}\r\n\r\nBlog.propTypes = {\r\n  blog: PropTypes.object,\r\n  updateBlog: PropTypes.func.isRequired,\r\n  removeBlog: PropTypes.func.isRequired,\r\n  addComment: PropTypes.func.isRequired,\r\n  setNotification: PropTypes.func.isRequired\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(Blog)","import React from 'react'\r\nimport {Link} from 'react-router-dom'\r\n\r\nconst BlogRow = (props) => {\r\n    const blog = props.blog\r\n\r\n    return (\r\n        <Link to={`blogs/${blog.id}`}>{blog.title} ({blog.author})</Link>\r\n    )\r\n}\r\n\r\nexport default BlogRow","import React from 'react'\r\nimport BlogRow from './BlogRow'\r\nimport { connect } from 'react-redux'\r\nimport PropTypes from 'prop-types'\r\nimport {List} from 'semantic-ui-react'\r\n\r\nconst BlogList = ({blogs}) => {\r\n    \r\n\r\n    return (\r\n        <List selection verticalAlign='middle' size='large'>\r\n      {\r\n        blogs.map(blog => \r\n          <List.Item key={blog.id}>\r\n            <List.Content>\r\n              <List.Header>\r\n                <BlogRow blog={blog} />\r\n              </List.Header>\r\n            </List.Content>\r\n          </List.Item>\r\n        )\r\n      }\r\n    </List>\r\n\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return { blogs: state.blogs }\r\n  }\r\n  \r\n  BlogList.propTypes = {\r\n    blogs: PropTypes.array.isRequired\r\n  }\r\n  \r\n  export default connect(mapStateToProps)(BlogList)","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport PropTypes from 'prop-types'\r\nimport { Button, Form } from 'semantic-ui-react'\r\nimport useField from '../hooks/index'\r\nimport { addBlog } from '../reducers/blogReducer'\r\nimport { setNotification } from '../reducers/notificationReducer'\r\n\r\nconst BlogForm = (props) => {\r\n  const title = useField('text')\r\n  const author = useField('text')\r\n  const url = useField('text')\r\n\r\n  const create = async (blog) => {\r\n    try {\r\n      await props.addBlog(blog)\r\n      props.setNotification({\r\n        message: `a new blog \"${blog.title}\" by ${blog.author} added`,\r\n        style: null\r\n      }, 2000)\r\n      title.reset()\r\n      author.reset()\r\n      url.reset()\r\n    } catch (exception) {\r\n      props.setNotification({\r\n        message: 'failed to create a new blog',\r\n        style: 'error'\r\n      }, 2000)\r\n    }\r\n  }\r\n\r\n  const submit = (event) => {\r\n    event.preventDefault()\r\n    create({\r\n      title: title.input.value,\r\n      author: author.input.value,\r\n      url: url.input.value\r\n    })\r\n  }\r\n\r\n  return (\r\n    <Form onSubmit={submit}>\r\n      <Form.Field required>\r\n        <label>title</label>\r\n        <input id='new-blog-title' {...title.input} />\r\n      </Form.Field>\r\n      <Form.Field required>\r\n        <label>author</label>\r\n        <input id='new-blog-author' {...author.input} />\r\n      </Form.Field>\r\n      <Form.Field required>\r\n        <label>url</label>\r\n        <input id='new-blog-url' {...url.input} />\r\n      </Form.Field>\r\n      <Button primary type=\"submit\">save</Button>\r\n    </Form>\r\n  )\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  addBlog,\r\n  setNotification\r\n}\r\n\r\nBlogForm.propTypes = {\r\n  addBlog: PropTypes.func.isRequired,\r\n  setNotification: PropTypes.func.isRequired\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(BlogForm)","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\nimport { Message } from 'semantic-ui-react'\r\n\r\nconst Notification = ({ notification }) => {\r\n  if (!notification.message || notification.message.trim() === '') {\r\n    return null\r\n  }\r\n  \r\n  if (notification.style === 'error') {\r\n    return (<Message negative>{notification.message}</Message>)\r\n  }\r\n\r\n  return (<Message positive>{notification.message}</Message>)\r\n\r\n}\r\n\r\nNotification.propTypes = {\r\n  notification: PropTypes.object\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return { notification: state.notification }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Notification)","import React, {useState, useImperativeHandle} from 'react'\r\nimport {Menu, Button} from 'semantic-ui-react'\r\n\r\nconst Togglable = React.forwardRef((props, ref) => {\r\n    const [visible, setVisible] = useState(false)\r\n\r\n    const hideWhenVisible = {display: visible ? 'none' : '' }\r\n    const showWhenVisible = {display: visible ? '' : 'none' }\r\n\r\n    const toggleVisibility = () => {\r\n        setVisible(!visible)\r\n    }\r\n\r\n    useImperativeHandle(ref, () => {\r\n        return {\r\n            toggleVisibility\r\n        }\r\n    })\r\n\r\n    return (\r\n        <Menu>\r\n        <Menu.Item style={hideWhenVisible}>\r\n            <Button onClick={toggleVisibility}>\r\n                {props.buttonLabel}\r\n            </Button>\r\n        </Menu.Item>\r\n        <Menu.Item style={showWhenVisible}>\r\n            {props.children}\r\n            <Button onClick={toggleVisibility}>cancel</Button>\r\n        </Menu.Item>\r\n        </Menu>\r\n    )\r\n})\r\n\r\nexport default Togglable","import axios from 'axios'\r\nconst baseUrl = '/api/users'\r\n\r\nconst getAll = async () => {\r\n    const res = await axios.get(baseUrl)\r\n    return res.data\r\n}\r\n\r\nconst createUser = async (newObj) => {\r\n    const res = await axios.post(baseUrl, newObj)\r\n    return res.data\r\n}\r\nexport default {getAll, createUser}","import userService from '../services/users'\r\n\r\nexport const initializeUsers = () => {\r\n    return async dispatch => {\r\n        const users = await userService.getAll()\r\n        dispatch({\r\n            type:'INIT_USERS',\r\n            data: users\r\n        })\r\n    }\r\n}\r\n\r\nexport const addUser = (user) => {\r\n    return async dispatch => {\r\n        const newUser = userService.createUser(user)\r\n        dispatch({\r\n            type: 'ADD_USER',\r\n            data: newUser\r\n        })\r\n    }\r\n}\r\nconst reducer = (state = [], action) => {\r\n    switch(action.type) {\r\n        case 'INIT_USERS':\r\n            return action.data\r\n        case 'ADD_USER':\r\n            return state.concat(action.data)\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default reducer","import React, {useEffect} from 'react'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport {initializeUsers} from '../reducers/userReducer'\r\nimport {Link} from 'react-router-dom'\r\n\r\nconst UserPage = () => {\r\n  const dispatch = useDispatch()\r\n  const users = useSelector(state => state.users)\r\n\r\n  useEffect(() => {\r\n    dispatch(initializeUsers())\r\n  }, [dispatch])\r\n\r\n      return (\r\n          <div>\r\n            <h2>Users</h2>\r\n            <table>\r\n              <tr>\r\n                <th>\r\n\r\n                </th>\r\n                <td>\r\n                  <strong>blogs created</strong>\r\n                </td>\r\n              </tr>\r\n            {users.map(user => (\r\n                <tr key = {user.id}>\r\n                  <td>\r\n                    <Link to={`/users/${user.id}`}>{user.name}</Link>\r\n                  </td>\r\n                  <td>\r\n                    {!user.blogs.length ? 0 : user.blogs.length}\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n          </table>\r\n          </div>\r\n      )\r\n}\r\n\r\nexport default UserPage","import React from 'react'\r\nimport { Header, List } from 'semantic-ui-react'\r\n\r\n\r\nconst User = ({user}) => {\r\n    if (!user ) return null\r\n\r\n    return (\r\n        <div>\r\n      <Header as='h2'>{user.name}</Header>\r\n      <Header as='h3'>added blogs</Header>\r\n      {\r\n        user.blogs.length > 0 ?\r\n          <List>\r\n            {\r\n              user.blogs.map(blog =>\r\n                <List.Item key={blog.id}>\r\n                  <List.Icon name='newspaper outline' />\r\n                  <List.Content>{blog.title}</List.Content>\r\n                </List.Item>\r\n              )\r\n            }\r\n          </List>\r\n          : <span>nothing yet!</span>\r\n      }\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default User","import React, { useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport PropTypes from 'prop-types'\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\r\nimport { Container, Divider, Header, Icon, Button, Segment, Form } from 'semantic-ui-react'\r\nimport Navigation from './components/Navigation'\r\nimport Blog from './components/Blog'\r\nimport BlogList from './components/BlogList'\r\nimport BlogForm from './components/BlogForm'\r\nimport Notification from './components/Notification'\r\nimport Togglable from './components/Togglable'\r\nimport UserList from './components/UserPage'\r\nimport User from './components/User'\r\nimport useField from './hooks/index'\r\nimport { login, fetchUser } from './reducers/loginReducer'\r\nimport { initializeBlogs } from './reducers/blogReducer'\r\nimport { setNotification } from './reducers/notificationReducer'\r\nimport { initializeUsers, addUser } from './reducers/userReducer'\r\n\r\nconst App = (props) => {\r\n  const fetchBlogs = props.initializeBlogs\r\n  const fetchUsers = props.initializeUsers\r\n  const fetchUser = props.fetchUser\r\n\r\n  const username = useField('text')\r\n  const password = useField('password')\r\n  const signupUsername = useField('text')\r\n  const signupPassword = useField('text')\r\n  const name = useField('text')\r\n\r\n  useEffect(() => { fetchUser() }, [fetchUser])\r\n  useEffect(() => { fetchBlogs() }, [fetchBlogs])\r\n  useEffect(() => { fetchUsers() }, [fetchUsers])\r\n\r\n  const handleLogin = async (event) => {\r\n    event.preventDefault()\r\n    try {\r\n      await props.login({\r\n        username: username.input.value,\r\n        password: password.input.value\r\n      })\r\n      username.reset()\r\n      password.reset()\r\n      props.setNotification({\r\n        message: 'Success!',\r\n      }, 5000)\r\n    } catch (exception) {\r\n      props.setNotification({\r\n        message: 'wrong username or password',\r\n        style: 'error'\r\n      }, 5000)\r\n    }\r\n  }\r\n\r\n  const handleSignup = async (event) => {\r\n    event.preventDefault()\r\n    try {\r\n      await props.addUser({\r\n        username: signupUsername.input.value,\r\n        password: signupPassword.input.value,\r\n        name: name.input.value\r\n      })\r\n      signupUsername.reset()\r\n      signupPassword.reset()\r\n      name.reset()\r\n      props.setNotification({\r\n        message: 'Success! Please go to the login form and login!',\r\n      }, 5000)\r\n    } catch (error) {\r\n      props.setNotification({\r\n        message: 'please try again',\r\n        style: 'error'\r\n      }, 5000)\r\n    }\r\n\r\n  }\r\n\r\n  const signupForm = () => (\r\n    <Segment>\r\n      <Form onSubmit={handleSignup}>\r\n        <Form.Field>\r\n          <label>username</label>\r\n          <input id='signup-username' {...signupUsername.input} />\r\n        </Form.Field>\r\n        <Form.Field>\r\n          <label>name</label>\r\n          <input id='name' {...name.input} />\r\n        </Form.Field>\r\n        <Form.Field>\r\n          <label>password</label>\r\n          <input id='signup-password' {...signupPassword.input} />\r\n        </Form.Field>\r\n        <Button primary type=\"submit\">signup</Button>\r\n      </Form>\r\n    </Segment>\r\n  )\r\n\r\n  const loginForm = () => (\r\n    <Segment>\r\n      <Form onSubmit={handleLogin}>\r\n        <Form.Field>\r\n          <label>username</label>\r\n          <input id='username' {...username.input} />\r\n        </Form.Field>\r\n        <Form.Field>\r\n          <label>password</label>\r\n          <input id='password' {...password.input} />\r\n        </Form.Field>\r\n        <Button primary type=\"submit\">login</Button>\r\n      </Form>\r\n    </Segment>\r\n  )\r\n\r\n  const blogById = (id) =>\r\n    props.blogs.find(blog => blog.id === id)\r\n\r\n  const userById = (id) =>\r\n    props.users.find(user => user.id === id)\r\n\r\n  return (\r\n    <Container>\r\n      <div>\r\n      </div>\r\n      {\r\n        props.loggedUser === null ? \r\n        <div>\r\n                <h2>Welcome to my Blog Application!</h2>\r\n        <h4>If you already have a profile, please log in! If you are new, please signup to create your profile, and then log in!</h4>\r\n        <Notification />\r\n        <Togglable buttonLabel='Sign Up'>\r\n        {signupForm()}\r\n      </Togglable>\r\n          <Togglable buttonLabel='Log In'>\r\n          {loginForm()}\r\n        </Togglable>\r\n        </div> :\r\n          <Router>\r\n            <Navigation />\r\n            <Header as='h1'>\r\n              <Icon name='newspaper outline'/>\r\n              <Header.Content>blog app</Header.Content>\r\n            </Header>\r\n            <Notification />\r\n            <Divider />\r\n            <Route exact path='/' render={() =>\r\n              <div>\r\n                <Segment>\r\n                  <Togglable buttonLabel='create a new blog'>\r\n                    <BlogForm />\r\n                  </Togglable>\r\n                </Segment>\r\n                <BlogList />\r\n              </div>\r\n            } />\r\n            <Route exact path='/users' render={() => <UserList /> } />\r\n            <Route path='/users/:id' render={({ match }) => \r\n              <User user={userById(match.params.id)} />\r\n            } />\r\n            <Route path='/blogs/:id' render={({ match }) => \r\n              <Blog blog={blogById(match.params.id)} />\r\n            } />\r\n          </Router>\r\n      }\r\n    </Container>\r\n  )\r\n}\r\n\r\nconst sortedBlogs = ({ blogs }) => {\r\n  return blogs.sort((b1, b2) => b2.upvotes - b1.upvotes)\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    loggedUser: state.loggedUser,\r\n    blogs: sortedBlogs(state),\r\n    users: state.users\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  fetchUser,\r\n  login,\r\n  initializeBlogs,\r\n  initializeUsers,\r\n  setNotification,\r\n  addUser\r\n}\r\n\r\nApp.propTypes = {\r\n  loggedUser: PropTypes.object,\r\n  fetchUser: PropTypes.func.isRequired,\r\n  login: PropTypes.func.isRequired,\r\n  initializeBlogs: PropTypes.func.isRequired,\r\n  initializeUsers: PropTypes.func.isRequired,\r\n  blogs: PropTypes.array,\r\n  users: PropTypes.array,\r\n  setNotification: PropTypes.func.isRequired\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App)","import { createStore, combineReducers, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport loginReducer from './reducers/loginReducer'\r\nimport blogReducer from './reducers/blogReducer'\r\nimport notificationReducer from './reducers/notificationReducer'\r\nimport userReducer from './reducers/userReducer'\r\n\r\nconst reducer = combineReducers({\r\n  loggedUser: loginReducer,\r\n  blogs: blogReducer,\r\n  users: userReducer,\r\n  notification: notificationReducer\r\n})\r\n\r\nconst store = createStore(reducer, applyMiddleware(thunk))\r\n\r\nexport default store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport store from './store'\nimport {Provider} from 'react-redux'\n\nReactDOM.render(\n  <Provider store={store}>\n    <App/>\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}